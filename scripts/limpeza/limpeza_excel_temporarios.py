#!/usr/bin/env python3
"""
LIMPEZA ARQUIVOS EXCEL TEMPOR√ÅRIOS - S√≥ os intermedi√°rios!
Remove apenas os arquivos Excel criados durante processamento
MANT√âM: dados originais + resultado final
"""

from pathlib import Path
import os

class LimpezaExcelTemporarios:
    def __init__(self):
        self.pasta_projeto = Path("D:/projetos/carne_facil")
        
        # Pastas com arquivos Excel tempor√°rios para limpar
        self.pastas_excel_temp = [
            "data/documentos_corrigidos",
            "data/documentos_estruturados", 
            "data/vendas_estrutura_real",
            "data/vendas_vend_dia",
            "data/documentos_completos"
        ]
        
        # MANTER INTOCADOS:
        # - data/caixa_lojas/ (dados originais)
        # - Qualquer arquivo final que voc√™ queira manter
    
    def listar_arquivos_excel_temporarios(self):
        """Lista apenas os arquivos Excel tempor√°rios que ser√£o removidos"""
        print("üìã ARQUIVOS EXCEL TEMPOR√ÅRIOS A REMOVER:")
        print("=" * 60)
        
        total_arquivos = 0
        total_tamanho = 0
        
        for pasta in self.pastas_excel_temp:
            pasta_path = self.pasta_projeto / pasta
            if pasta_path.exists():
                print(f"\nüìÅ {pasta}:")
                
                arquivos_excel = list(pasta_path.glob("**/*.xlsx"))
                if arquivos_excel:
                    for arquivo in arquivos_excel:
                        try:
                            tamanho = arquivo.stat().st_size / (1024*1024)  # MB
                            print(f"   üóëÔ∏è {arquivo.name} ({tamanho:.2f} MB)")
                            total_arquivos += 1
                            total_tamanho += tamanho
                        except:
                            print(f"   üóëÔ∏è {arquivo.name}")
                            total_arquivos += 1
                else:
                    print(f"   ‚úÖ Nenhum arquivo Excel encontrado")
        
        print(f"\nüìä RESUMO:")
        print(f"   üìÑ Total arquivos Excel tempor√°rios: {total_arquivos}")
        print(f"   üíæ Total tamanho: {total_tamanho:.2f} MB")
        
        return total_arquivos
    
    def verificar_dados_originais_seguros(self):
        """Verifica que os dados originais est√£o seguros"""
        print("\nüîí VERIFICANDO SEGURAN√áA DOS DADOS ORIGINAIS:")
        print("=" * 50)
        
        pasta_lojas = self.pasta_projeto / "data/caixa_lojas"
        if pasta_lojas.exists():
            print("‚úÖ Pasta data/caixa_lojas/ - SER√Å MANTIDA")
            
            for loja in sorted(pasta_lojas.iterdir()):
                if loja.is_dir():
                    excel_originais = len(list(loja.glob("**/*.xlsx")))
                    print(f"   üè¢ {loja.name}: {excel_originais} arquivos originais - SEGUROS")
        else:
            print("‚ùå ATEN√á√ÉO: Pasta data/caixa_lojas/ n√£o encontrada!")
    
    def executar_limpeza_excel_temp(self):
        """Remove apenas os arquivos Excel tempor√°rios"""
        print("\nüßπ REMOVENDO ARQUIVOS EXCEL TEMPOR√ÅRIOS...")
        print("=" * 50)
        
        arquivos_removidos = 0
        mb_liberados = 0
        
        for pasta in self.pastas_excel_temp:
            pasta_path = self.pasta_projeto / pasta
            if pasta_path.exists():
                arquivos_excel = list(pasta_path.glob("**/*.xlsx"))
                
                for arquivo in arquivos_excel:
                    try:
                        tamanho = arquivo.stat().st_size / (1024*1024)  # MB
                        arquivo.unlink()
                        print(f"   ‚úÖ Removido: {arquivo.name}")
                        arquivos_removidos += 1
                        mb_liberados += tamanho
                    except Exception as e:
                        print(f"   ‚ùå Erro ao remover {arquivo.name}: {e}")
        
        print(f"\nüéâ LIMPEZA CONCLU√çDA!")
        print(f"   üóëÔ∏è {arquivos_removidos} arquivos Excel tempor√°rios removidos")
        print(f"   üíæ {mb_liberados:.2f} MB liberados")
        
        return arquivos_removidos
    
    def mostrar_estrutura_final(self):
        """Mostra estrutura final mantendo s√≥ o essencial"""
        print("\nüìÅ ESTRUTURA FINAL - S√ì O ESSENCIAL:")
        print("=" * 40)
        
        # Mostrar dados originais preservados
        pasta_lojas = self.pasta_projeto / "data/caixa_lojas"
        if pasta_lojas.exists():
            print("üìÅ data/")
            print("   üìÅ caixa_lojas/ (DADOS ORIGINAIS PRESERVADOS)")
            
            total_originais = 0
            for loja in sorted(pasta_lojas.iterdir()):
                if loja.is_dir():
                    excel_count = len(list(loja.glob("**/*.xlsx")))
                    total_originais += excel_count
                    print(f"      üè¢ {loja.name}/ ({excel_count} arquivos originais)")
            
            print(f"   üìä Total: {total_originais} arquivos Excel originais preservados")
        
        # Verificar se sobrou algum tempor√°rio
        print(f"\nüîç VERIFICA√á√ÉO P√ìS-LIMPEZA:")
        temp_restantes = 0
        for pasta in self.pastas_excel_temp:
            pasta_path = self.pasta_projeto / pasta
            if pasta_path.exists():
                temp_files = list(pasta_path.glob("**/*.xlsx"))
                if temp_files:
                    temp_restantes += len(temp_files)
                    print(f"   ‚ö†Ô∏è {pasta}: {len(temp_files)} arquivos restantes")
        
        if temp_restantes == 0:
            print("   ‚úÖ Nenhum arquivo tempor√°rio restante - LIMPEZA PERFEITA!")

def main():
    limpeza = LimpezaExcelTemporarios()
    
    print("üßπ LIMPEZA ARQUIVOS EXCEL TEMPOR√ÅRIOS")
    print("=" * 50)
    print("üéØ Remove APENAS arquivos Excel criados durante processamento")
    print("üîí MANT√âM dados originais dos caixas INTOCADOS")
    print()
    
    # Verificar seguran√ßa primeiro
    limpeza.verificar_dados_originais_seguros()
    
    # Listar o que ser√° removido
    total = limpeza.listar_arquivos_excel_temporarios()
    
    if total > 0:
        print(f"\n‚ö†Ô∏è Ser√£o removidos {total} arquivos Excel TEMPOR√ÅRIOS")
        print("üîí Dados originais em data/caixa_lojas/ ficam SEGUROS")
        
        confirmacao = input("\nü§î Confirma a remo√ß√£o dos tempor√°rios? (s/n): ").strip().lower()
        
        if confirmacao in ['s', 'sim', 'y', 'yes']:
            removidos = limpeza.executar_limpeza_excel_temp()
            limpeza.mostrar_estrutura_final()
        else:
            print("‚ùå Limpeza cancelada")
    else:
        print("\n‚úÖ Nenhum arquivo Excel tempor√°rio encontrado!")
        limpeza.mostrar_estrutura_final()

if __name__ == "__main__":
    main()